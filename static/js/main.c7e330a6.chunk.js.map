{"version":3,"sources":["utils.js","Charts/TransactionsChart.js","data.js","Charts/InvoiceChart.js","Charts/Products.js","App.js","serviceWorker.js","index.js"],"names":["getFilteredByDate","data","filter","_ref","time","value","getFilteredByCompany","_ref2","company","getFilteredByProduct","_ref3","product","timeTickFormatter","moment","unix","format","TransactionsChart","_this$props","this","props","width","react_default","a","createElement","es6","height","strokeDasharray","dataKey","tickFormatter","yAxisId","label","angle","position","orientation","numeral","type","stroke","isAnimationActive","Component","counts","values","companies","products","Array","fill","map","_","index","subtract","invoiceTypes","transactions","sample","count","sort","b","invoices","Object","defineProperty","produtsSold","dateFilterOptions","startOf","companiesFilterOptions","productFilterOptions","InvoiceChart","Products","stackId","App","state","dateFilter","companyFilter","sidebar","handleDateFilter","_this","setState","handleCompanyFilter","handleProductFilter","productFilter","toggleSidebar","renderSidebar","className","_this$state","react_sidebar_esm","open","onSetOpen","styles","background","onClick","react_select_es","placeholder","options","onChange","Charts_TransactionsChart","Charts_InvoiceChart","Charts_Products","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7e330a6.chunk.js","sourcesContent":["import moment from 'moment';\n\nexport const getFilteredByDate = (data, filter) => {\n    if(filter) {\n        return data.filter(({time }) => time > filter.value);\n    }\n    return data;\n}\n\nexport const getFilteredByCompany = (data, filter) => {\n    if(filter) {\n        return data.filter(({ company }) => company === filter.value);\n    }\n    return data;\n}\n\nexport const getFilteredByProduct = (data, filter) => {\n    if(filter) {\n        return data.filter(({ product }) => product === filter.value);\n    }\n    return data;\n}\n\nexport const timeTickFormatter = value => moment.unix(value).format(\"DD, MMM 'YY\");","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n    LineChart,\n    Line,\n    Legend,\n    Tooltip,\n    YAxis,\n    XAxis,\n    CartesianGrid\n} from 'recharts';\n\nimport { timeTickFormatter } from '../utils';\n\nclass TransactionsChart extends Component {\n    render() {\n        const { data, width } = this.props;\n\n        return (\n            <LineChart width={width} height={400} data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    yAxisId=\"count\"\n                    dataKey=\"count\"\n                    label={{\n                        value: 'Transaction Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n                <YAxis\n                    yAxisId=\"value\"\n                    dataKey=\"value\"\n                    orientation=\"right\"\n                    label={{\n                        value: 'Transaction Value',\n                        angle: 90,\n                        position: 'insideRight'\n                    }}\n                    tickFormatter={value => numeral(value).format('0,0a')}\n                />\n                <Tooltip />\n                <Legend />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    stroke=\"#8884d8\"\n                    yAxisId=\"value\"\n                    isAnimationActive={false}\n                />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"count\"\n                    stroke=\"#82ca9d\"\n                    yAxisId=\"count\"\n                    isAnimationActive={false}\n                />\n            </LineChart>\n        );\n    }\n}\n\nTransactionsChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default TransactionsChart;\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\nconst counts = [10, 20, 25, 30, 35, 40, 45, 60, 80, 100, 200, 300];\nconst values = [10000, 15000, 20000, 50000, 100000, 200000, 500000];\nconst companies = ['a', 'b', 'c', 'd', 'e'];\nconst products = ['p1', 'p2', 'p3'];\nconst time = Array(30)\n    .fill(0)\n    .map((_, index) =>\n        moment()\n            .subtract(30 - index, 'day')\n            .unix()\n    );\nconst invoiceTypes = ['pending', 'delivered', 'clearDue'];\n\nexport const transactions = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            count: sample(counts),\n            value: sample(values),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const invoices = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            [invoiceTypes[0]]: sample(counts),\n            [invoiceTypes[1]]: sample(counts),\n            [invoiceTypes[2]]: sample(counts),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const produtsSold = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            [products[0]]: sample(counts),\n            [products[1]]: sample(counts),\n            [products[2]]: sample(counts),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const dateFilterOptions = [\n    {\n        label: 'Today',\n        value: moment()\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Yesterday',\n        value: moment()\n            .subtract(1, 'day')\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Last week',\n        value: moment()\n            .subtract(1, 'week')\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Last Month',\n        value: moment()\n            .subtract(1, 'month')\n            .startOf('day')\n            .unix()\n    }\n];\n\nexport const companiesFilterOptions = [\n    {\n        label: 'A',\n        value: 'a'\n    },\n    {\n        label: 'B',\n        value: 'b'\n    },\n    {\n        label: 'C',\n        value: 'c'\n    },\n    {\n        label: 'D',\n        value: 'd'\n    },\n    {\n        label: 'E',\n        value: 'e'\n    }\n];\n\nexport const productFilterOptions = [\n    {\n        label: 'P1',\n        value: 'p1'\n    },\n    {\n        label: 'P2',\n        value: 'p2'\n    },\n    {\n        label: 'P3',\n        value: 'p3'\n    }\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\nimport { timeTickFormatter } from '../utils';\n\nclass InvoiceChart extends Component {\n    render() {\n        const { data, width } = this.props;\n        return (\n            <BarChart width={width} height={400} data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Bar fill=\"#8884d8\" dataKey=\"pending\" />\n                <Bar fill=\"#868438\" dataKey=\"delivered\" />\n                <Bar fill=\"#82ca9d\" dataKey=\"clearDue\" />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    label={{\n                        value: 'Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n                <Tooltip />\n                <Legend />\n            </BarChart>\n        );\n    }\n}\n\nInvoiceChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default InvoiceChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    AreaChart,\n    Area,\n    Legend,\n    Tooltip,\n    YAxis,\n    XAxis,\n    CartesianGrid\n} from 'recharts';\nimport { timeTickFormatter } from '../utils';\n\nclass Products extends Component {\n    render() {\n        const { width, data } = this.props;\n        return (\n            <AreaChart width={width} height={400} data={data}>\n                <Area\n                    dataKey=\"p1\"\n                    fill=\"#8884d8\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <Area\n                    dataKey=\"p2\"\n                    fill=\"#82ca9d\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <Area\n                    dataKey=\"p3\"\n                    fill=\"#ffc658\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Legend />\n                <Tooltip />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    label={{\n                        value: 'Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n            </AreaChart>\n        );\n    }\n}\n\nProducts.propTypes = {\n    width: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired\n};\n\nexport default Products;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Sidebar from 'react-sidebar';\n\nimport TransactionsChart from './Charts/TransactionsChart';\n\nimport {\n    transactions,\n    dateFilterOptions,\n    companiesFilterOptions,\n    invoices,\n    produtsSold,\n    productFilterOptions\n} from './data';\n\nimport 'react-select/dist/react-select.css';\nimport './App.css';\nimport InvoiceChart from './Charts/InvoiceChart';\nimport { getFilteredByDate, getFilteredByCompany, getFilteredByProduct } from './utils';\nimport Products from './Charts/Products';\n\nclass App extends Component {\n    state = {\n        dateFilter: null,\n        companyFilter: null,\n        transactions: transactions,\n        invoices: invoices,\n        products: produtsSold,\n        sidebar: false\n    };\n\n    handleDateFilter = filter => {\n        this.setState({\n            dateFilter: filter,\n            transactions: getFilteredByDate(transactions, filter),\n            invoices: getFilteredByDate(invoices, filter),\n            products: getFilteredByDate(produtsSold, filter)\n        });\n    };\n\n    handleCompanyFilter = filter => {\n        this.setState({\n            companyFilter: filter,\n            transactions: getFilteredByCompany(transactions, filter),\n            invoices: getFilteredByCompany(invoices, filter),\n            products: getFilteredByCompany(produtsSold, filter)\n        });\n    };\n\n    handleProductFilter = filter => {\n      this.setState({\n          productFilter: filter,\n          transactions: getFilteredByProduct(transactions, filter),\n          invoices: getFilteredByProduct(invoices, filter),\n          products: getFilteredByProduct(produtsSold, filter)\n      });\n  };\n\n    toggleSidebar = () => {\n        this.setState(({ sidebar }) => ({ sidebar: !sidebar }));\n    };\n\n    renderSidebar = () => {\n      return <div>\n          <h2 className=\"sidebar-header\">Header</h2>\n          <div className=\"sidebar-item\">Overview</div>\n          <div className=\"sidebar-item\">Section 1</div>\n          <div className=\"sidebar-item\">Section 2</div>\n          <div className=\"sidebar-item\">Section 3</div>\n          <div className=\"sidebar-item\">Section 4</div>\n      </div>\n    }\n\n    render() {\n        const {\n            dateFilter,\n            companyFilter,\n            transactions,\n            invoices,\n            sidebar,\n            products,\n            productFilter\n        } = this.state;\n\n        return (\n            <div className=\"App\">\n                <div className=\"filters\">\n                    <Sidebar\n                        sidebar={this.renderSidebar()}\n                        open={sidebar}\n                        onSetOpen={this.toggleSidebar}\n                        styles={{ sidebar: { background: 'white', width: 240 } }}\n                    >\n                        <i className=\"material-icons sidebar-icon\" onClick={this.toggleSidebar}>\n                            menu\n                        </i>\n                    </Sidebar>\n                    <Select\n                        placeholder=\"Select Date Filter\"\n                        options={dateFilterOptions}\n                        value={dateFilter}\n                        onChange={this.handleDateFilter}\n                        className=\"date-select\"\n                    />\n                    <Select\n                        placeholder=\"Select Company Filter\"\n                        options={companiesFilterOptions}\n                        value={companyFilter}\n                        onChange={this.handleCompanyFilter}\n                    />\n                     <Select\n                        placeholder=\"Select Product Filter\"\n                        options={productFilterOptions}\n                        value={productFilter}\n                        onChange={this.handleProductFilter}\n                    />\n                </div>\n                <div className=\"container\">\n                    <div className=\"card\">\n                        <TransactionsChart width={550} data={transactions} />\n                        <h3>Transactions</h3>\n                    </div>\n                    <div className=\"card\">\n                        <InvoiceChart data={invoices} width={550} />\n                        <h3>Invoices</h3>\n                    </div>\n                    <div className=\"card\">\n                      <Products width={600} data={products}/>\n                      <h3>Products Sold</h3>\n                    </div>\n                    <div className=\"card\">\n                      <div className=\"empty\">\n                        Similar graphs for other stats\n                      </div>\n                    </div>\n                    <div className=\"card\">\n                      <div className=\"empty\">\n                        Similar graphs for other stats\n                      </div>\n                    </div>\n                    <div className=\"card\">\n                      <div className=\"empty\">\n                        Similar graphs for other stats\n                      </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}