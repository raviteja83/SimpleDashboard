{"version":3,"sources":["data.js","utils.js","Charts/TransactionsChart.js","Charts/InvoiceChart.js","Charts/Products.js","App.js","serviceWorker.js","index.js"],"names":["counts","values","companies","products","invoiceTypes","time","Array","fill","map","_","index","moment","subtract","unix","transactions","sample","count","value","company","product","sort","a","b","invoices","_ref","Object","defineProperty","produtsSold","_ref2","dateFilterOptions","label","startOf","companiesFilterOptions","productFilterOptions","getFilteredByDate","data","filter","getFilteredByCompany","getFilteredByProduct","_ref3","timeTickFormatter","format","transactionsCount","reduce","acc","_ref4","invoiceCount","invoice","key","productCount","TransactionsChart","_this$props","this","props","width","react_default","createElement","es6","height","strokeDasharray","dataKey","tickFormatter","yAxisId","angle","position","orientation","numeral","type","stroke","isAnimationActive","Component","InvoiceChart","Products","stackId","App","state","dateFilter","companyFilter","sidebar","handleDateFilter","_this","setState","handleCompanyFilter","handleProductFilter","productFilter","toggleSidebar","renderSidebar","className","_this$state","_getTotalCounts","tTotal","iTotal","pTotal","transactionsPercent","invoicePercent","productsPercent","react_sidebar_esm","open","onSetOpen","styles","background","onClick","react_select_es","placeholder","options","onChange","dist_default","percentage","text","path","Charts_TransactionsChart","Charts_InvoiceChart","Charts_Products","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ec35190.chunk.js","sourcesContent":["import { sample } from 'lodash';\nimport moment from 'moment';\n\nconst counts = [10, 20, 25, 30, 35, 40, 45, 60, 80, 100, 200, 300];\nconst values = [10000, 15000, 20000, 50000, 100000, 200000, 500000];\nconst companies = ['a', 'b', 'c', 'd', 'e'];\nexport const products = ['p1', 'p2', 'p3'];\nexport const invoiceTypes = ['type1', 'type2', 'type3'];\nconst time = Array(30)\n    .fill(0)\n    .map((_, index) =>\n        moment()\n            .subtract(30 - index, 'day')\n            .unix()\n    );\n\nexport const transactions = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            count: sample(counts),\n            value: sample(values),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const invoices = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            [invoiceTypes[0]]: sample(counts),\n            [invoiceTypes[1]]: sample(counts),\n            [invoiceTypes[2]]: sample(counts),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const produtsSold = Array(30)\n    .fill(0)\n    .map(() => {\n        return {\n            time: sample(time),\n            [products[0]]: sample(counts),\n            [products[1]]: sample(counts),\n            [products[2]]: sample(counts),\n            company: sample(companies),\n            product: sample(products)\n        };\n    })\n    .sort((a, b) => a.time - b.time);\n\nexport const dateFilterOptions = [\n    {\n        label: 'Today',\n        value: moment()\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Yesterday',\n        value: moment()\n            .subtract(1, 'day')\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Last week',\n        value: moment()\n            .subtract(1, 'week')\n            .startOf('day')\n            .unix()\n    },\n    {\n        label: 'Last Month',\n        value: moment()\n            .subtract(1, 'month')\n            .startOf('day')\n            .unix()\n    }\n];\n\nexport const companiesFilterOptions = [\n    {\n        label: 'A',\n        value: 'a'\n    },\n    {\n        label: 'B',\n        value: 'b'\n    },\n    {\n        label: 'C',\n        value: 'c'\n    },\n    {\n        label: 'D',\n        value: 'd'\n    },\n    {\n        label: 'E',\n        value: 'e'\n    }\n];\n\nexport const productFilterOptions = [\n    {\n        label: 'P1',\n        value: 'p1'\n    },\n    {\n        label: 'P2',\n        value: 'p2'\n    },\n    {\n        label: 'P3',\n        value: 'p3'\n    }\n];\n","import moment from 'moment';\nimport { invoiceTypes, products, transactions, invoices } from './data';\n\nexport const getFilteredByDate = (data, filter) => {\n    if (filter) {\n        return data.filter(({ time }) => time > filter.value);\n    }\n    return data;\n};\n\nexport const getFilteredByCompany = (data, filter) => {\n    if (filter) {\n        return data.filter(({ company }) => company === filter.value);\n    }\n    return data;\n};\n\nexport const getFilteredByProduct = (data, filter) => {\n    if (filter) {\n        return data.filter(({ product }) => product === filter.value);\n    }\n    return data;\n};\n\nexport const timeTickFormatter = value =>\n    moment.unix(value).format(\"DD, MMM 'YY\");\n\nexport const transactionsCount = data =>\n    data.reduce((acc, { count }) => acc + count, 0);\n\nexport const invoiceCount = data =>\n    data.reduce(\n        (acc, value) =>\n            acc +\n            invoiceTypes.reduce((invoice, key) => invoice + value[key], 0),\n        0\n    );\n\nexport const productCount = data =>\n    data.reduce(\n        (acc, value) =>\n            acc + products.reduce((invoice, key) => invoice + value[key], 0),\n        0\n    );\n\nexport const getTotalCounts = () => {\n    return {\n        tTotal: transactionsCount(transactions) || 1,\n        iTotal: invoiceCount(invoices) || 1,\n        pTotal: productCount(products) || 1\n    };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n    LineChart,\n    Line,\n    Legend,\n    Tooltip,\n    YAxis,\n    XAxis,\n    CartesianGrid\n} from 'recharts';\n\nimport { timeTickFormatter } from '../utils';\n\nclass TransactionsChart extends Component {\n    render() {\n        const { data, width } = this.props;\n\n        return (\n            <LineChart width={width} height={400} data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    yAxisId=\"count\"\n                    dataKey=\"count\"\n                    label={{\n                        value: 'Transaction Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n                <YAxis\n                    yAxisId=\"value\"\n                    dataKey=\"value\"\n                    orientation=\"right\"\n                    label={{\n                        value: 'Transaction Value',\n                        angle: 90,\n                        position: 'insideRight'\n                    }}\n                    tickFormatter={value => numeral(value).format('0,0a')}\n                />\n                <Tooltip />\n                <Legend />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    stroke=\"#8884d8\"\n                    yAxisId=\"value\"\n                    isAnimationActive={false}\n                />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"count\"\n                    stroke=\"#82ca9d\"\n                    yAxisId=\"count\"\n                    isAnimationActive={false}\n                />\n            </LineChart>\n        );\n    }\n}\n\nTransactionsChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default TransactionsChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\nimport { timeTickFormatter } from '../utils';\n\nclass InvoiceChart extends Component {\n    render() {\n        const { data, width } = this.props;\n        return (\n            <BarChart width={width} height={400} data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Bar fill=\"#8884d8\" dataKey=\"type1\" />\n                <Bar fill=\"#868438\" dataKey=\"type2\" />\n                <Bar fill=\"#82ca9d\" dataKey=\"type3\" />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    label={{\n                        value: 'Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n                <Tooltip />\n                <Legend />\n            </BarChart>\n        );\n    }\n}\n\nInvoiceChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default InvoiceChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    AreaChart,\n    Area,\n    Legend,\n    Tooltip,\n    YAxis,\n    XAxis,\n    CartesianGrid\n} from 'recharts';\nimport { timeTickFormatter } from '../utils';\n\nclass Products extends Component {\n    render() {\n        const { width, data } = this.props;\n        return (\n            <AreaChart width={width} height={400} data={data}>\n                <Area\n                    dataKey=\"p1\"\n                    fill=\"#8884d8\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <Area\n                    dataKey=\"p2\"\n                    fill=\"#82ca9d\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <Area\n                    dataKey=\"p3\"\n                    fill=\"#ffc658\"\n                    stackId={1}\n                    isAnimationActive={false}\n                />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Legend />\n                <Tooltip />\n                <XAxis dataKey=\"time\" tickFormatter={timeTickFormatter} />\n                <YAxis\n                    label={{\n                        value: 'Count',\n                        angle: -90,\n                        position: 'insideLeft'\n                    }}\n                />\n            </AreaChart>\n        );\n    }\n}\n\nProducts.propTypes = {\n    width: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired\n};\n\nexport default Products;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Sidebar from 'react-sidebar';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport numeral from 'numeral';\n\nimport TransactionsChart from './Charts/TransactionsChart';\nimport InvoiceChart from './Charts/InvoiceChart';\nimport Products from './Charts/Products';\n\nimport {\n    transactions,\n    dateFilterOptions,\n    companiesFilterOptions,\n    invoices,\n    produtsSold,\n    productFilterOptions\n} from './data';\n\nimport {\n    getFilteredByDate,\n    getFilteredByCompany,\n    getFilteredByProduct,\n    transactionsCount,\n    invoiceCount,\n    productCount,\n    getTotalCounts\n} from './utils';\n\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'react-select/dist/react-select.css';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        dateFilter: null,\n        companyFilter: null,\n        transactions: transactions,\n        invoices: invoices,\n        products: produtsSold,\n        sidebar: false\n    };\n\n    handleDateFilter = filter => {\n        this.setState({\n            dateFilter: filter,\n            transactions: getFilteredByDate(transactions, filter),\n            invoices: getFilteredByDate(invoices, filter),\n            products: getFilteredByDate(produtsSold, filter)\n        });\n    };\n\n    handleCompanyFilter = filter => {\n        this.setState({\n            companyFilter: filter,\n            transactions: getFilteredByCompany(transactions, filter),\n            invoices: getFilteredByCompany(invoices, filter),\n            products: getFilteredByCompany(produtsSold, filter)\n        });\n    };\n\n    handleProductFilter = filter => {\n        this.setState({\n            productFilter: filter,\n            transactions: getFilteredByProduct(transactions, filter),\n            invoices: getFilteredByProduct(invoices, filter),\n            products: getFilteredByProduct(produtsSold, filter)\n        });\n    };\n\n    toggleSidebar = () => {\n        this.setState(({ sidebar }) => ({ sidebar: !sidebar }));\n    };\n\n    renderSidebar = () => {\n        return (\n            <div>\n                <h2 className=\"sidebar-header\">Header</h2>\n                <div className=\"sidebar-item\">Overview</div>\n                <div className=\"sidebar-item\">Section 1</div>\n                <div className=\"sidebar-item\">Section 2</div>\n                <div className=\"sidebar-item\">Section 3</div>\n                <div className=\"sidebar-item\">Section 4</div>\n            </div>\n        );\n    };\n\n    render() {\n        const {\n            dateFilter,\n            companyFilter,\n            transactions,\n            invoices,\n            sidebar,\n            products,\n            productFilter\n        } = this.state;\n        const { tTotal, iTotal, pTotal } = getTotalCounts();\n\n        const transactionsPercent = transactionsCount(transactions);\n        const invoicePercent = invoiceCount(invoices);\n        const productsPercent = productCount(products);\n\n        return (\n            <div className=\"App\">\n                <div className=\"filters\">\n                    <Sidebar\n                        sidebar={this.renderSidebar()}\n                        open={sidebar}\n                        onSetOpen={this.toggleSidebar}\n                        styles={{\n                            sidebar: { background: 'white', width: 240 }\n                        }}\n                    >\n                        <i\n                            className=\"material-icons sidebar-icon\"\n                            onClick={this.toggleSidebar}\n                        >\n                            menu\n                        </i>\n                    </Sidebar>\n                    <Select\n                        placeholder=\"Select Date Filter\"\n                        options={dateFilterOptions}\n                        value={dateFilter}\n                        onChange={this.handleDateFilter}\n                        className=\"date-select\"\n                    />\n                    <Select\n                        placeholder=\"Select Company Filter\"\n                        options={companiesFilterOptions}\n                        value={companyFilter}\n                        onChange={this.handleCompanyFilter}\n                    />\n                    <Select\n                        placeholder=\"Select Product Filter\"\n                        options={productFilterOptions}\n                        value={productFilter}\n                        onChange={this.handleProductFilter}\n                    />\n                </div>\n                <div className=\"overview\">\n                    <div className=\"overview-piece\">\n                        <CircularProgressbar\n                            percentage={(transactionsPercent / tTotal) * 100}\n                            text={numeral(transactionsPercent).format('0,0a')}\n                            styles={{\n                                path: { stroke: '#8884d8' },\n                                text: { fill: '#8884d8' }\n                            }}\n                        />\n                        <div className=\"overview-title\">Transactions</div>\n                    </div>\n                    <div className=\"overview-piece\">\n                        <CircularProgressbar\n                            percentage={(invoicePercent / iTotal) * 100}\n                            text={numeral(invoicePercent).format('0,0a')}\n                            styles={{\n                                path: { stroke: '#ffc658' },\n                                text: { fill: '#ffc658' }\n                            }}\n                        />\n                        <div className=\"overview-title\">Invoices</div>\n                    </div>\n                    <div className=\"overview-piece\">\n                        <CircularProgressbar\n                            percentage={(productsPercent / pTotal) * 100}\n                            text={numeral(productsPercent).format('0,0a')}\n                            styles={{\n                                path: { stroke: '#82ca9d' },\n                                text: { fill: '#82ca9d' }\n                            }}\n                        />\n                        <div className=\"overview-title\">Products</div>\n                    </div>\n                    <div className=\"overview-piece\">\n                        <div className=\"overview-empty\" />\n                        <div className=\"overview-title\">Something else</div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"card\">\n                        <TransactionsChart width={550} data={transactions} />\n                        <h3>Transactions</h3>\n                    </div>\n                    <div className=\"card\">\n                        <InvoiceChart data={invoices} width={550} />\n                        <h3>Invoices</h3>\n                    </div>\n                    <div className=\"card\">\n                        <Products width={600} data={products} />\n                        <h3>Products Sold</h3>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"empty\">\n                            Similar graphs for other stats\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"empty\">\n                            Similar graphs for other stats\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"empty\">\n                            Similar graphs for other stats\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}